{"version":3,"sources":["constants.js","reducers/logicState.js","store/index.js","ui/Thumb/Thumb.jsx","ui/Main/Main.jsx","utils/convertors.js","actions/index.js","db/index.js","thunk/index.js","containers/Main.js","ui/Filter/Filter.jsx","containers/Filter.js","ui/Stats/Stats.jsx","containers/Stats.js","ui/Panel/Panel.jsx","containers/Panel.js","ui/MenuButton/MenuButton.jsx","ui/ModalWindow/ModalWindow.jsx","ui/ModalWindow/EditForm/EditForm.jsx","containers/EditForm.js","ui/ModalWindow/ErrorDialog/ErrorDialog.jsx","containers/ErrorDialog.js","ui/ModalWindow/ConfirmDialog/ConfirmDialog.jsx","ui/App/App.jsx","containers/App.js","index.js"],"names":["INIT_TAGS","SET_ERROR","SHOW_MODAL_WINDOW","inputModeEnum","modalWindowTypes","initialState","activeFile","title","file","collection","description","tags","showModalType","currentColl","collections","images","searchQuery","stats","usage","quota","filesCount","error","state","type","value","action","logicState","store","createStore","applyMiddleware","thunkMiddleware","Thumb","group","onEdit","onDelete","className","href","src","alt","onClick","Main","query","updateFileData","showFileConfirmDialog","selectFile","downloadCollectionArchive","useState","isCaptionVisible","toggleCaption","currentSlideDescriptor","setSlideDescriptor","onDeleteHandler","descriptor","e","stopPropagation","thumbElements","map","idx","fileDescriptor","key","collectionTitle","lightgallerySettings","thumbnail","dynamic","dynamicEl","onAfterOpen","onCloseAfter","onAfterSlide","detail","length","index","format","dimensions","size","width","height","toFixed","join","style","display","showCaptionElement","getBlobFromURL","objectURL","a","fetch","then","res","blob","collectionDescriptorsToZip","collectionName","descriptorList","zip","JsZip","forEach","generateAsync","zipFile","fileName","FileSaver","saveAs","bytesToMB","initCollections","initTags","initImagesCollection","selectCollection","setError","message","setSearchQuery","showModalWindow","dialogType","hideModalWindow","db","Dexie","version","stores","on","bulkAdd","getCollections","table","orderBy","toArray","getTags","addCollection","add","addTag","name","removeCollection","withContent","transaction","where","delete","modify","img","removeFile","id","renameCollection","newTitle","currentTitle","downloadImagesCollection","getImagesCollection","detectFormat","getImageDimensions","objectUrl","Promise","resolve","Image","addEventListener","this","naturalWidth","naturalHeight","uploadImage","fileURL","fileBlob","URL","revokeObjectURL","metaData","put","getStats","count","navigator","storage","estimate","console","clearStorage","clear","search","titles","anyOf","searchResultByTags","startsWithAnyOfIgnoreCase","searchResultByTitle","uploadFile","dispatch","createObjectURL","switchCollection","getStorageStats","blobImages","urlImages","activeCollection","tag","connect","getState","Filter","props","editCollectionName","addNewCollection","showCollectionConfirmDialog","useEffect","setCollectionValue","mode","initialValue","inputModeState","setInputModeState","searchQueryInput","updateSearchQuery","collectionInputValue","showCollectionInput","toggleCollectionInput","selectCollectionHandler","preventDefault","collectionsItems","albumName","collectionStyle","classNames","active","displayedName","slice","onSubmit","placeholder","onChange","target","onKeyDown","prevState","currName","newName","keyWords","split","filter","startsWith","Stats","showStorageConfirmDialog","storageStats","updateStats","Math","round","percent","Panel","showCreateFormDialog","uploadButtonStyle","MenuButton","toggleButton","buttonStyle","ModalWindow","isVisible","onClose","container","document","body","children","createElement","contentHolder","appendChild","removeChild","content","ReactDOM","createPortal","acceptFileType","EditForm","closeHandler","addNewTag","updateDescriptor","newTag","setNewTag","showFileError","toggleFileError","collectionOptions","tagOptions","htmlFor","tabIndex","Object","values","files","accept","trim","Array","from","options","option","selected","multiple","rows","tagName","ErrorDialog","marginBottom","ConfirmDialog","cancelHandler","onFullDelete","extraQuestion","App","removeActiveFile","showModal","toggleModal","closeModalWindow","deleteCollectionHandler","deleteWithFiles","editFormDialog","errorDialog","deleteFileDialog","clearStorageDialog","deleteCollectionDialog","render","getElementById"],"mappings":"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","file":"static/js/main.4c3992b6.chunk.js","sourcesContent":["// GalleryDB default predefined collections\r\nexport const DEFAULT_COLLECTION_NAME1 = \"Uncollected\";\r\nexport const DEFAULT_COLLECTION_NAME2 = \"All\";\r\n\r\n// Logic state actions constants\r\nexport const SET_COLLECTION = \"reducers/logicState/SET_COLLECTION\";\r\nexport const INIT_COLLECTIONS = \"reducers/logicState/INIT_COLLECTIONS\";\r\nexport const INIT_TAGS = \"reducers/logicState/INIT_TAGS\";\r\nexport const SET_ERROR = \"reducers/logicState/SET_ERROR\";\r\nexport const INIT_IMAGES_COLLECTION = \"reducers/logicState/INIT_IMAGES_COLLECTION\";\r\nexport const UPDATE_STATS = \"reducers/logicState/UPDATE_STATS\";\r\nexport const SET_SEARCH_QUERY = \"reducers/logicState/SET_SEARCH_QUERY\";\r\nexport const SET_ACTIVE_FILE = \"reducers/logicState/SET_ACTIVE_FILE\";\r\nexport const SHOW_MODAL_WINDOW = \"reducers/logicState/SHOW_MODAL_WINDOW\";\r\n\r\nexport const inputModeEnum = {\r\n  CREATE_MODE: \"create\",\r\n  EDIT_MODE: \"edit\",\r\n};\r\n\r\nexport const modalWindowTypes = {\r\n  EDIT_FORM_DIALOG: \"EDIT_FORM_DIALOG\",\r\n  CREATE_FORM_DIALOG: \"CREATE_FORM_DIALOG\",\r\n  INFO_DIALOG: \"INFO_DIALOG\",\r\n  DELETE_FILE_DIALOG: \"DELETE_FILE_DIALOG\",\r\n  DELETE_COLLECTION_DIALOG: \"DELETE_COLLECTION_DIALOG\",\r\n  CLEAR_STORAGE_DIALOG: \"CLEAR_STORAGE_DIALOG\",\r\n};\r\n","import {\r\n  DEFAULT_COLLECTION_NAME1,\r\n  SET_COLLECTION,\r\n  INIT_COLLECTIONS,\r\n  INIT_TAGS,\r\n  INIT_IMAGES_COLLECTION,\r\n  SET_SEARCH_QUERY,\r\n  SET_ERROR,\r\n  UPDATE_STATS,\r\n  SET_ACTIVE_FILE,\r\n  SHOW_MODAL_WINDOW,\r\n} from \"constants.js\";\r\n\r\nconst initialState = {\r\n  activeFile: {\r\n    title: \"\",\r\n    file: null,\r\n    collection: \"\",\r\n    description: \"\",\r\n    tags: [],\r\n  },\r\n  showModalType: null,\r\n  currentColl: DEFAULT_COLLECTION_NAME1,\r\n  collections: [],\r\n  images: [],\r\n  tags: [],\r\n  searchQuery: \"\",\r\n  stats: {\r\n    usage: 0,\r\n    quota: 0,\r\n    filesCount: 0,\r\n  },\r\n  error: \"\",\r\n};\r\n\r\n// Reducers\r\n\r\nconst activeFile = (state, { type, value }) => {\r\n  switch (type) {\r\n    case SET_ACTIVE_FILE:\r\n      return value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst stats = (state, { type, value }) => {\r\n  switch (type) {\r\n    case UPDATE_STATS:\r\n      return { ...value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst currentColl = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_COLLECTION:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst searchQuery = (state, { type, value }) => {\r\n  switch (type) {\r\n    case SET_SEARCH_QUERY:\r\n      return value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst images = (state, { type, value }) => {\r\n  switch (type) {\r\n    case INIT_IMAGES_COLLECTION:\r\n      return value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst collections = (state, { type, value }) => {\r\n  switch (type) {\r\n    case INIT_COLLECTIONS:\r\n      return value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst tags = (state, { type, value }) => {\r\n  switch (type) {\r\n    case INIT_TAGS:\r\n      return value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst error = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst showModalType = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL_WINDOW:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst logicState = (state = initialState, action) => {\r\n  return {\r\n    activeFile: activeFile(state.activeFile, action),\r\n    showModalType: showModalType(state.showModalType, action),\r\n    currentColl: currentColl(state.currentColl, action),\r\n    collections: collections(state.collections, action),\r\n    tags: tags(state.tags, action),\r\n    images: images(state.images, action),\r\n    searchQuery: searchQuery(state.searchQuery, action),\r\n    stats: stats(state.stats, action),\r\n    error: error(state.error, action),\r\n  };\r\n};\r\n\r\nexport default logicState;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { logicState } from \"reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst store = createStore(logicState, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { LightgalleryItem } from \"react-lightgallery\";\r\n\r\nconst Thumb = ({ group, file, title, onEdit, onDelete }) => {\r\n  return (\r\n    <li className=\"collection__thumb\">\r\n      <a href=\"#\" className=\"collection__thumb-link\">\r\n        <div className=\"collection__thumb-content\">\r\n          <LightgalleryItem group={group} src={file}>\r\n            <img className=\"collection__thumb-img\" src={file} alt={title} />\r\n            <section className=\"collection__thumb-more\">\r\n              <div className=\"collection__thumb-title\">{title}</div>\r\n              <div className=\"collection__thumb-controls\">\r\n                <button className=\"button thumb__delete-btn\" onClick={onDelete}></button>\r\n                <button className=\"button thumb__edit-btn\" onClick={onEdit}></button>\r\n              </div>\r\n            </section>\r\n          </LightgalleryItem>\r\n        </div>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Thumb;\r\n","import React, { useState } from \"react\";\r\nimport Thumb from \"ui/Thumb\";\r\nimport { LightgalleryProvider } from \"react-lightgallery\";\r\n\r\nconst Main = ({\r\n  currentColl = \"\",\r\n  images = [],\r\n  query = \"\",\r\n  updateFileData,\r\n  showFileConfirmDialog,\r\n  selectFile,\r\n  downloadCollectionArchive,\r\n}) => {\r\n  const [isCaptionVisible, toggleCaption] = useState(false);\r\n  const [currentSlideDescriptor, setSlideDescriptor] = useState(null);\r\n\r\n  const onEditHandler = (descriptor) => (e) => {\r\n    updateFileData(descriptor);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const onDeleteHandler = (descriptor) => (e) => {\r\n    selectFile(descriptor);\r\n    showFileConfirmDialog();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const OnDownloadHandler = () => downloadCollectionArchive();\r\n\r\n  const thumbElements = images.map(({ file, title }, idx) => {\r\n    const fileDescriptor = images[idx];\r\n    return (\r\n      <Thumb\r\n        key={idx}\r\n        group=\"group\"\r\n        file={file}\r\n        title={title}\r\n        onEdit={onEditHandler(fileDescriptor)}\r\n        onDelete={onDeleteHandler(fileDescriptor)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const showCaptionElement = () => {\r\n    if (!isCaptionVisible) return;\r\n    const { title, format, dimensions, type, size, tags, description } = currentSlideDescriptor;\r\n    const [width, height] = dimensions;\r\n    return (\r\n      <section className=\"collection-caption lg-sub-html\">\r\n        <h4>{title}</h4>\r\n        <p>\r\n          <span className=\"collection-caption__label\">Format:</span> {format}\r\n        </p>\r\n        <p>\r\n          <span className=\"collection-caption__label\">File size:</span> {size.toFixed(2)} MB\r\n        </p>\r\n        <p>\r\n          <span className=\"collection-caption__label\">Dimensions:</span> {`${width}x${height}`}\r\n        </p>\r\n        <p>\r\n          <span className=\"collection-caption__label\">Type:</span> {type}\r\n        </p>\r\n        <p>\r\n          <span className=\"collection-caption__label\">Tags:</span> {tags.join(\",\")}\r\n        </p>\r\n        <p>\r\n          <span className=\"collection-caption__label\" style={{ display: \"block\" }}>\r\n            Description:\r\n          </span>\r\n          {description}\r\n        </p>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  const collectionTitle = query ? `Related to: ${query}` : currentColl;\r\n\r\n  return (\r\n    <LightgalleryProvider\r\n      lightgallerySettings={{ thumbnail: false, dynamic: true, dynamicEl: images }}\r\n      onAfterOpen={() => {\r\n        toggleCaption(true);\r\n      }}\r\n      onCloseAfter={() => {\r\n        toggleCaption(false);\r\n      }}\r\n      onAfterSlide={({ detail }) => {\r\n        if (images.length) {\r\n          setSlideDescriptor(images[detail.index]);\r\n        }\r\n      }}\r\n    >\r\n      <section className=\"content\">\r\n        <article className=\"collection\">\r\n          <header className=\"collection__header\">\r\n            <h3 className=\"title collection-title\">{collectionTitle}</h3>\r\n            <span className=\"collection__stats\">{`(${images.length} images)`}</span>\r\n            <button className=\"button collection-download__btn\" onClick={OnDownloadHandler}>\r\n              <span className=\"collection-download__icon\">s</span>\r\n            </button>\r\n          </header>\r\n          <ul className=\"collection__list\">{thumbElements}</ul>\r\n          {showCaptionElement()}\r\n        </article>\r\n      </section>\r\n    </LightgalleryProvider>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import JsZip from \"jszip\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nexport const getBlobFromURL = async (objectURL) => {\r\n  return await fetch(objectURL).then((res) => res.blob());\r\n};\r\n\r\nexport const collectionDescriptorsToZip = async (collectionName, descriptorList) => {\r\n  const zip = JsZip();\r\n\r\n  descriptorList.forEach((descriptor) => zip.file(descriptor.title, descriptor.file));\r\n\r\n  const zipFile = await zip.generateAsync({ type: \"blob\" });\r\n  const fileName = `${collectionName}.zip`;\r\n  return FileSaver.saveAs(zipFile, fileName);\r\n};\r\n\r\nexport const bytesToMB = (value) => value / (1024 * 1024);\r\n","import {\r\n  SET_COLLECTION,\r\n  INIT_COLLECTIONS,\r\n  INIT_TAGS,\r\n  INIT_IMAGES_COLLECTION,\r\n  SET_SEARCH_QUERY,\r\n  SET_ERROR,\r\n  SET_ACTIVE_FILE,\r\n  SHOW_MODAL_WINDOW,\r\n  modalWindowTypes,\r\n} from \"constants.js\";\r\n\r\n// Action creators\r\nconst initCollections = (collections) => ({\r\n  type: INIT_COLLECTIONS,\r\n  value: collections,\r\n});\r\n\r\nconst initTags = (tags) => ({\r\n  type: INIT_TAGS,\r\n  value: tags,\r\n});\r\n\r\nconst initImagesCollection = (images) => ({ type: INIT_IMAGES_COLLECTION, value: images });\r\n\r\nconst selectCollection = (collectionName) => ({\r\n  type: SET_COLLECTION,\r\n  value: collectionName,\r\n});\r\n\r\nconst selectFile = (descriptor) => ({ type: SET_ACTIVE_FILE, value: descriptor });\r\n\r\nconst setError = (message) => ({ type: SET_ERROR, value: message });\r\n\r\nconst setSearchQuery = (query) => ({ type: SET_SEARCH_QUERY, value: query });\r\n\r\nconst showModalWindow = (dialogType) => ({ type: SHOW_MODAL_WINDOW, value: dialogType });\r\n\r\nconst hideModalWindow = () => ({ type: SHOW_MODAL_WINDOW, value: null });\r\n\r\nconst showCreateFormDialog = () => ({ type: SHOW_MODAL_WINDOW, value: modalWindowTypes.CREATE_FORM_DIALOG });\r\n\r\nconst showFileConfirmDialog = () => ({\r\n  type: SHOW_MODAL_WINDOW,\r\n  value: modalWindowTypes.DELETE_FILE_DIALOG,\r\n});\r\n\r\nconst showCollectionConfirmDialog = () => ({\r\n  type: SHOW_MODAL_WINDOW,\r\n  value: modalWindowTypes.DELETE_COLLECTION_DIALOG,\r\n});\r\n\r\nconst showStorageConfirmDialog = () => ({\r\n  type: SHOW_MODAL_WINDOW,\r\n  value: modalWindowTypes.CLEAR_STORAGE_DIALOG,\r\n});\r\n\r\nexport {\r\n  initCollections,\r\n  initTags,\r\n  initImagesCollection,\r\n  selectCollection,\r\n  setError,\r\n  setSearchQuery,\r\n  selectFile,\r\n  showModalWindow,\r\n  showCreateFormDialog,\r\n  showCollectionConfirmDialog,\r\n  showStorageConfirmDialog,\r\n  showFileConfirmDialog,\r\n  hideModalWindow,\r\n};\r\n","import Dexie from \"dexie\";\r\nimport { DEFAULT_COLLECTION_NAME1, DEFAULT_COLLECTION_NAME2 } from \"constants.js\";\r\nimport { getBlobFromURL, bytesToMB } from \"utils/convertors\";\r\n\r\nconst db = new Dexie(\"GalleryDB\");\r\n\r\nconst IMAGES_STORAGE = \"images\";\r\nconst COLLECTIONS_STORAGE = \"collections\";\r\nconst TAGS_STORAGE = \"tags\";\r\n\r\ndb.version(1).stores({\r\n  [IMAGES_STORAGE]: \"++id, title, collection, *tags\",\r\n  [COLLECTIONS_STORAGE]: \"++id, &title\",\r\n  [TAGS_STORAGE]: \"++id, &name\",\r\n});\r\n\r\ndb.on(\"populate\", () => {\r\n  db[COLLECTIONS_STORAGE].bulkAdd([\r\n    {\r\n      title: DEFAULT_COLLECTION_NAME1,\r\n    },\r\n    { title: DEFAULT_COLLECTION_NAME2 },\r\n  ]);\r\n});\r\n\r\n/** Full 'images' objectStore schema: \r\n { title, \r\n   format (portrait, square, landscape), \r\n   size, \r\n   fileSize, \r\n   mimetype, \r\n   date, \r\n   description,\r\n*/\r\n\r\nconst getCollections = async () => db.table(COLLECTIONS_STORAGE).orderBy(\":id\").toArray();\r\n\r\nconst getTags = async () => db.table(TAGS_STORAGE).orderBy(\":id\").toArray();\r\n\r\nconst addCollection = async (title) => db.table(COLLECTIONS_STORAGE).add({ title });\r\n\r\nconst addTag = async (name) => db.table(TAGS_STORAGE).add({ name });\r\n\r\nconst removeCollection = async (title, withContent = false) => {\r\n  return db.transaction(\"rw\", db[COLLECTIONS_STORAGE], db[IMAGES_STORAGE], async () => {\r\n    const images = await db.table(IMAGES_STORAGE).where({ collection: title });\r\n    if (withContent) {\r\n      await images.delete();\r\n    } else {\r\n      await images.modify((img) => (img.collection = DEFAULT_COLLECTION_NAME1));\r\n    }\r\n    await db.table(COLLECTIONS_STORAGE).where({ title }).delete();\r\n  });\r\n};\r\n\r\nconst removeFile = async (id) => db.table(IMAGES_STORAGE).delete(id);\r\n\r\nconst renameCollection = async (newTitle, currentTitle) => {\r\n  return db.transaction(\"rw\", db[COLLECTIONS_STORAGE], db[IMAGES_STORAGE], async () => {\r\n    await db.table(COLLECTIONS_STORAGE).where({ title: currentTitle }).modify({ title: newTitle });\r\n    await db\r\n      .table(IMAGES_STORAGE)\r\n      .where({ collection: currentTitle })\r\n      .modify((img) => (img.collection = newTitle));\r\n  });\r\n};\r\n\r\nconst downloadImagesCollection = async (collectionTitle) => await getImagesCollection(collectionTitle);\r\n\r\nconst getImagesCollection = (collectionTitle = DEFAULT_COLLECTION_NAME1) => {\r\n  if (collectionTitle === DEFAULT_COLLECTION_NAME2) {\r\n    return db.table(IMAGES_STORAGE).toArray();\r\n  }\r\n  return db.table(IMAGES_STORAGE).where({ collection: collectionTitle }).toArray();\r\n};\r\n\r\nconst format = {\r\n  LANDSCAPE_FORMAT: \"Landscape\",\r\n  PORTRAIT_FORMAT: \"Portrait\",\r\n  SQUARE_FORMAT: \"Square\",\r\n};\r\nconst detectFormat = ([width, height]) => {\r\n  if (width > height) {\r\n    return format.LANDSCAPE_FORMAT;\r\n  } else if (width < height) {\r\n    return format.PORTRAIT_FORMAT;\r\n  } else if (width === height) {\r\n    return format.SQUARE_FORMAT;\r\n  }\r\n};\r\n\r\nconst getImageDimensions = (objectUrl) => {\r\n  return new Promise((resolve) => {\r\n    const img = new Image(objectUrl);\r\n    img.src = objectUrl;\r\n    img.addEventListener(\"load\", function () {\r\n      resolve([this.naturalWidth || this.width, this.naturalHeight || this.height]);\r\n    });\r\n  });\r\n};\r\n\r\nconst uploadImage = async (fileDescriptor = {}) => {\r\n  const {\r\n    title = \"\",\r\n    fileURL = null,\r\n    collection = DEFAULT_COLLECTION_NAME1,\r\n    type = \"\",\r\n    size = 0,\r\n    tags = [],\r\n    description = \"\",\r\n  } = fileDescriptor;\r\n\r\n  const dimensions = await getImageDimensions(fileURL);\r\n  const fileBlob = await getBlobFromURL(fileURL);\r\n  URL.revokeObjectURL(fileURL);\r\n\r\n  return db.transaction(\"rw\", db[IMAGES_STORAGE], async () => {\r\n    const metaData = {\r\n      title,\r\n      file: fileBlob,\r\n      format: detectFormat(dimensions),\r\n      dimensions,\r\n      type,\r\n      size: bytesToMB(size),\r\n      collection,\r\n      tags,\r\n      description,\r\n    };\r\n    if (fileDescriptor.id) {\r\n      metaData.id = fileDescriptor.id;\r\n    }\r\n    db.table(IMAGES_STORAGE).put(metaData);\r\n  });\r\n};\r\n\r\nconst getStats = async () => {\r\n  const filesCount = await db.table(IMAGES_STORAGE).count();\r\n  let quota = \"U/A\";\r\n  let usage = \"U/A\";\r\n\r\n  if (navigator.storage && navigator.storage.estimate) {\r\n    ({ quota, usage } = await navigator.storage.estimate());\r\n  } else {\r\n    console.error(\"StorageManager not found\");\r\n  }\r\n\r\n  return {\r\n    filesCount,\r\n    quota,\r\n    usage,\r\n  };\r\n};\r\n\r\nconst clearStorage = async () => db.table(IMAGES_STORAGE).clear();\r\n\r\nconst search = async (titles, tags) => {\r\n  const searchResultByTags = await db.table(IMAGES_STORAGE).where(\"tags\").anyOf(tags).toArray();\r\n  const searchResultByTitle = await db.table(IMAGES_STORAGE).where(\"title\").startsWithAnyOfIgnoreCase(titles).toArray();\r\n  return [...searchResultByTags, ...searchResultByTitle];\r\n};\r\n\r\nexport default {\r\n  getImagesCollection,\r\n  getCollections,\r\n  getTags,\r\n  addCollection,\r\n  addTag,\r\n  removeCollection,\r\n  uploadImage,\r\n  clearStorage,\r\n  renameCollection,\r\n  getStats,\r\n  downloadImagesCollection,\r\n  search,\r\n  removeFile,\r\n};\r\n","import { collectionDescriptorsToZip } from \"utils/convertors\";\r\nimport {\r\n  initCollections,\r\n  initTags,\r\n  initImagesCollection,\r\n  selectCollection,\r\n  setError,\r\n  setSearchQuery,\r\n  showModalWindow,\r\n  hideModalWindow,\r\n  selectFile,\r\n} from \"actions\";\r\nimport db from \"db\";\r\n\r\nimport { DEFAULT_COLLECTION_NAME1, UPDATE_STATS, modalWindowTypes } from \"constants.js\";\r\n\r\n// Thunks\r\n\r\nconst uploadFile = (fileDescriptor) => async (dispatch) => {\r\n  await db.uploadImage({ ...fileDescriptor, fileURL: URL.createObjectURL(fileDescriptor.file) });\r\n  dispatch(switchCollection(fileDescriptor.collection));\r\n  dispatch(hideModalWindow());\r\n};\r\n\r\nconst clearStorage = () => async (dispatch) => db.clearStorage().then(() => dispatch(switchCollection()));\r\n\r\nconst getStorageStats = () => async (dispatch) =>\r\n  db.getStats().then((stats) => dispatch({ type: UPDATE_STATS, value: stats }));\r\n\r\nconst switchCollection = (collectionName = DEFAULT_COLLECTION_NAME1) => async (dispatch) => {\r\n  const blobImages = await db.getImagesCollection(collectionName);\r\n  const urlImages = blobImages.map((img) => ({ ...img, file: URL.createObjectURL(img.file) }));\r\n  dispatch(initImagesCollection(urlImages));\r\n  dispatch(selectCollection(collectionName));\r\n  dispatch(setSearchQuery(\"\"));\r\n  dispatch(getStorageStats());\r\n};\r\n\r\nconst search = (query) => async (dispatch) => {\r\n  if (!query) return;\r\n  const keyWords = query.split(\" \");\r\n  const titles = keyWords.filter((key) => !key.startsWith(\"#\"));\r\n  const tags = keyWords.filter((key) => key.startsWith(\"#\"));\r\n\r\n  const blobImages = await db.search(titles, tags);\r\n  const urlImages = blobImages.map((img) => ({ ...img, file: URL.createObjectURL(img.file) }));\r\n  const searchQuery = (tags.length ? `tags - [${tags}] ` : \"\") + (titles.length ? `titles - [${titles}]` : \"\");\r\n  dispatch(setSearchQuery(searchQuery));\r\n  dispatch(initImagesCollection(urlImages));\r\n};\r\n\r\nconst removeCollection = (title, withContent = false) => async (dispatch) => {\r\n  await db.removeCollection(title, withContent);\r\n  dispatch(getCollections());\r\n};\r\n\r\nconst removeActiveFile = () => async (dispatch, getState) => db.removeFile(getState().activeFile.id);\r\n\r\nconst getCollections = (activeCollection) => async (dispatch) => {\r\n  const collections = await db.getCollections();\r\n  dispatch(initCollections(collections));\r\n  dispatch(switchCollection(activeCollection));\r\n};\r\n\r\nconst getTags = () => async (dispatch) => {\r\n  const tags = await db.getTags();\r\n  dispatch(initTags(tags.map((tag) => tag.name)));\r\n};\r\n\r\nconst editCollectionName = (currName, newName) => (dispatch) =>\r\n  db.renameCollection(newName, currName).then(() => dispatch(getCollections(newName)));\r\n\r\nconst addNewCollection = (collectionName) => async (dispatch) => {\r\n  try {\r\n    await db.addCollection(collectionName);\r\n    dispatch(getCollections(collectionName));\r\n  } catch (e) {\r\n    console.error(e);\r\n    dispatch(setError(\"Collection with this name already exist\"));\r\n    dispatch(dispatch(showModalWindow(modalWindowTypes.INFO_DIALOG)));\r\n  }\r\n};\r\n\r\nconst addNewTag = (tagName) => async (dispatch) => {\r\n  try {\r\n    await db.addTag(tagName);\r\n    dispatch(getTags());\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateFileData = (fileDescriptor) => (dispatch) => {\r\n  dispatch(showModalWindow(modalWindowTypes.EDIT_FORM_DIALOG));\r\n  dispatch(selectFile({ ...fileDescriptor, file: null }));\r\n};\r\n\r\nconst downloadCollectionArchive = () => async (dispatch, getState) => {\r\n  const descriptorList = await db.downloadImagesCollection();\r\n  collectionDescriptorsToZip(getState().currentColl, descriptorList);\r\n};\r\n\r\nexport {\r\n  getCollections,\r\n  getTags,\r\n  editCollectionName,\r\n  addNewCollection,\r\n  addNewTag,\r\n  uploadFile,\r\n  switchCollection,\r\n  clearStorage,\r\n  removeCollection,\r\n  search,\r\n  updateFileData,\r\n  removeActiveFile,\r\n  downloadCollectionArchive,\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport Main from \"ui/Main\";\r\nimport { updateFileData, downloadCollectionArchive } from \"thunk\";\r\nimport { showFileConfirmDialog, selectFile } from \"actions\";\r\n\r\nconst mapStateToProps = ({ currentColl, images, searchQuery }) => ({ currentColl, images, query: searchQuery });\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateFileData,\r\n  showFileConfirmDialog,\r\n  selectFile,\r\n  downloadCollectionArchive,\r\n})(Main);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { inputModeEnum } from \"constants.js\";\r\n\r\nconst LIST_ITEM_LIMIT = 18;\r\n\r\nconst Filter = (props) => {\r\n  const {\r\n    collections = [],\r\n    currentColl,\r\n    getCollections,\r\n    switchCollection,\r\n    editCollectionName,\r\n    addNewCollection,\r\n    removeCollection,\r\n    showCollectionConfirmDialog,\r\n    search,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    getCollections();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCollectionValue(currentColl);\r\n  }, [currentColl]);\r\n\r\n  const [inputModeState, setInputModeState] = useState({\r\n    mode: inputModeEnum.CREATE_MODE,\r\n    initialValue: \"\",\r\n  });\r\n  const [searchQueryInput, updateSearchQuery] = useState(\"\");\r\n  const [collectionInputValue, setCollectionValue] = useState(\"\");\r\n  const [showCollectionInput, toggleCollectionInput] = useState(false);\r\n\r\n  const addHandler = () => {\r\n    setInputModeState((prevState) => ({ ...prevState, mode: inputModeEnum.CREATE_MODE }));\r\n    setCollectionValue(\"\");\r\n    toggleCollectionInput(!showCollectionInput);\r\n  };\r\n\r\n  const selectCollectionHandler = (collectionName) => (e) => {\r\n    e.preventDefault();\r\n    switchCollection(collectionName);\r\n  };\r\n\r\n  const acceptHandler = () => {\r\n    if (!collectionInputValue) return;\r\n\r\n    if (inputModeState.mode === inputModeEnum.EDIT_MODE) {\r\n      editCollectionName(inputModeState.initialValue, collectionInputValue);\r\n    } else {\r\n      addNewCollection(collectionInputValue);\r\n    }\r\n    toggleCollectionInput(!showCollectionInput);\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    toggleCollectionInput(!showCollectionInput);\r\n  };\r\n\r\n  const removeHandler = () => {\r\n    toggleCollectionInput(!showCollectionInput);\r\n    showCollectionConfirmDialog();\r\n  };\r\n\r\n  const changeHandler = ({ target }) => {\r\n    setCollectionValue(target.value);\r\n  };\r\n\r\n  const editHandler = (albumName) => (e) => {\r\n    setInputModeState({ initialValue: albumName, mode: inputModeEnum.EDIT_MODE });\r\n    setCollectionValue(albumName);\r\n    toggleCollectionInput(true);\r\n  };\r\n\r\n  const onSearchChange = ({ target }) => updateSearchQuery(target.value);\r\n\r\n  const handleSearchRequest = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      search(searchQueryInput);\r\n    }\r\n  };\r\n\r\n  const collectionsItems = collections.map(({ title: collectionName }) => {\r\n    const collectionStyle = classNames(\"collections-names-link\", \"filter__list-link\", {\r\n      active: currentColl === collectionName,\r\n    });\r\n    const displayedName =\r\n      collectionName.length > LIST_ITEM_LIMIT ? `${collectionName.slice(0, LIST_ITEM_LIMIT)}...` : collectionName;\r\n    return (\r\n      <li className=\"collections-names__item\" key={collectionName} title={collectionName}>\r\n        <a href=\"#\" className={collectionStyle} onClick={selectCollectionHandler(collectionName)}>\r\n          {displayedName}\r\n        </a>\r\n        <button onClick={editHandler(collectionName)} className=\"button collections__edit-btn\" type=\"button\"></button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"filter\">\r\n      <article className=\"search\">\r\n        <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input search-form__input\"\r\n            value={searchQueryInput}\r\n            placeholder=\"Search by #tags, 'title'\"\r\n            onChange={onSearchChange}\r\n            onKeyDown={handleSearchRequest}\r\n          />\r\n        </form>\r\n      </article>\r\n      <article className=\"collections filter__item\">\r\n        <section className=\"collections__header\">\r\n          <h3 className=\"title panel-title\">Collections</h3>\r\n          <button title=\"Add collection\" className=\"button collections__add-btn\" onClick={addHandler}></button>\r\n        </section>\r\n        <ul className=\"collections-names filter__list\">\r\n          <li\r\n            key=\"collection-create\"\r\n            className={classNames(\"collections-names__create\", {\r\n              \"collections-names__create_visible\": showCollectionInput,\r\n            })}\r\n          >\r\n            <input\r\n              onChange={changeHandler}\r\n              value={collectionInputValue}\r\n              className=\"collections-input collections-names__input filter__list-link active\"\r\n            ></input>\r\n            <div className=\"collections-names__controls\">\r\n              <button\r\n                title=\"Accept\"\r\n                className=\"button collections__accept-btn\"\r\n                onClick={acceptHandler}\r\n                type=\"button\"\r\n              ></button>\r\n              <button\r\n                title=\"Cancel\"\r\n                className=\"button collections__cancel-btn\"\r\n                onClick={cancelHandler}\r\n                type=\"button\"\r\n              ></button>\r\n              {inputModeState.mode === inputModeEnum.EDIT_MODE && (\r\n                <button\r\n                  title=\"Remove\"\r\n                  className=\"button collections__remove-btn\"\r\n                  onClick={removeHandler}\r\n                  type=\"button\"\r\n                ></button>\r\n              )}\r\n            </div>\r\n          </li>\r\n          {collectionsItems}\r\n        </ul>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport Filter from \"ui/Filter\";\r\nimport { showCollectionConfirmDialog } from \"actions\";\r\nimport {\r\n  getCollections,\r\n  editCollectionName,\r\n  addNewCollection,\r\n  switchCollection,\r\n  removeCollection,\r\n  search,\r\n} from \"thunk\";\r\n\r\nconst mapStateToProps = ({ collections, currentColl }) => ({\r\n  collections,\r\n  currentColl,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  removeCollection,\r\n  getCollections,\r\n  switchCollection,\r\n  editCollectionName,\r\n  addNewCollection,\r\n  showCollectionConfirmDialog,\r\n  search,\r\n})(Filter);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { bytesToMB } from \"utils/convertors\";\r\n\r\nconst Stats = ({ stats, showStorageConfirmDialog }) => {\r\n  const [storageStats, updateStats] = useState(stats);\r\n\r\n  useEffect(() => updateStats(stats), [stats]);\r\n\r\n  const clearStorageHandler = (e) => {\r\n    e.preventDefault();\r\n    showStorageConfirmDialog();\r\n  };\r\n\r\n  const usage = bytesToMB(storageStats.usage).toFixed(2);\r\n  const quota = Math.round(bytesToMB(storageStats.quota));\r\n  const percent = ((usage / quota) * 100).toFixed(2);\r\n\r\n  return (\r\n    <section className=\"panel-stats\">\r\n      <a className=\"panel-stats__clear-link\" href=\"#\" onClick={clearStorageHandler}>\r\n        <span className=\"panel-stats__size\">{`${usage}/${quota}MB (${percent}%)`}</span>\r\n        <span className=\"panel-stats__files\">{storageStats.filesCount} files</span>\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { connect } from \"react-redux\";\r\nimport Stats from \"ui/Stats\";\r\nimport { showStorageConfirmDialog } from \"actions\";\r\n\r\nconst mapStateToProps = ({ stats }) => ({ stats });\r\n\r\nexport default connect(mapStateToProps, { showStorageConfirmDialog })(Stats);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Filter from \"containers/Filter\";\r\nimport Stats from \"containers/Stats\";\r\n\r\nconst Panel = ({ showCreateFormDialog }) => {\r\n  const uploadClickHandler = (e) => {\r\n    showCreateFormDialog();\r\n  };\r\n\r\n  const uploadButtonStyle = classNames(\"button\", \"upload-btn\");\r\n\r\n  return (\r\n    <aside className=\"panel\">\r\n      <div className=\"panel__inner\">\r\n        <button className={uploadButtonStyle} onClick={uploadClickHandler}>\r\n          Upload\r\n        </button>\r\n        <Stats />\r\n        <Filter />\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { connect } from \"react-redux\";\r\nimport Panel from \"ui/Panel\";\r\nimport { uploadFile } from \"thunk\";\r\nimport { showCreateFormDialog } from \"actions\";\r\n\r\nexport default connect(null, { uploadFile, showCreateFormDialog })(Panel);\r\n","import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst MenuButton = (props) => {\r\n  const [active, toggleButton] = useState(false);\r\n  const clickHandler = () => toggleButton((state) => !state);\r\n\r\n  const buttonStyle = classNames(\"button\", \"app__menu-btn\", \"menu-btn\", {\r\n    \"menu-btn_active\": active,\r\n  });\r\n  return (\r\n    <button className={buttonStyle} onClick={clickHandler} type=\"button\">\r\n      <div className=\"menu-btn__row1\"></div>\r\n      <div className=\"menu-btn__row2\"></div>\r\n      <div className=\"menu-btn__row3\"></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MenuButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst ModalWindow = ({ isVisible, onClose, container = document.body, children }) => {\r\n  const [contentHolder] = useState(document.createElement(\"div\"));\r\n\r\n  useEffect(() => {\r\n    container.appendChild(contentHolder);\r\n    return () => container.removeChild(contentHolder);\r\n  }, []);\r\n\r\n  const content = (\r\n    <div className=\"modal-window\">\r\n      <div className=\"modal-window__content\">\r\n        <button className=\"button close-btn modal-window__close-btn\" onClick={onClose} type=\"button\"></button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return isVisible && ReactDOM.createPortal(content, contentHolder);\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { inputModeEnum, DEFAULT_COLLECTION_NAME2 } from \"constants.js\";\r\n\r\nconst acceptFileType = {\r\n  images: \"image/*\",\r\n};\r\n\r\nconst EditForm = ({\r\n  mode,\r\n  activeFile,\r\n  collections,\r\n  tags = [],\r\n  activeCollection,\r\n  uploadFile,\r\n  closeHandler,\r\n  addNewTag,\r\n  getTags,\r\n}) => {\r\n  const [fileDescriptor, updateDescriptor] = useState(\r\n    mode === inputModeEnum.CREATE_MODE\r\n      ? {\r\n          title: \"\",\r\n          file: null,\r\n          collection: \"\",\r\n          description: \"\",\r\n          tags: [],\r\n        }\r\n      : activeFile\r\n  );\r\n  const [newTag, setNewTag] = useState(\"\");\r\n  const [showFileError, toggleFileError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateDescriptor((descriptor) => ({ ...descriptor, collection: activeCollection }));\r\n  }, [activeCollection]);\r\n\r\n  const collectionOptions = collections\r\n    .filter(({ title }) => title !== DEFAULT_COLLECTION_NAME2)\r\n    .map(({ title }) => (\r\n      <option key={title} value={title}>\r\n        {title}\r\n      </option>\r\n    ));\r\n  const tagOptions = tags.map((name) => (\r\n    <option key={name} value={name}>\r\n      {name}\r\n    </option>\r\n  ));\r\n\r\n  const changeCollection = ({ target }) =>\r\n    updateDescriptor((descriptor) => ({ ...descriptor, collection: target.value }));\r\n\r\n  const changeDescription = ({ target }) =>\r\n    updateDescriptor((descriptor) => ({ ...descriptor, description: target.value }));\r\n\r\n  const changeTags = ({ target }) => {\r\n    const tags = Array.from(target.options)\r\n      .filter((option) => option.selected)\r\n      .map((option) => option.value);\r\n    updateDescriptor((descriptor) => ({ ...descriptor, tags }));\r\n  };\r\n\r\n  const uploadFileHandler = ({ target }) => {\r\n    const [file] = Object.values(target.files);\r\n    updateDescriptor((descriptor) => ({ ...descriptor, title: file.name, file, type: file.type, size: file.size }));\r\n    toggleFileError(false);\r\n  };\r\n\r\n  const fileNameChange = ({ target }) => updateDescriptor((descriptor) => ({ ...descriptor, title: target.value }));\r\n\r\n  const onUpload = () => {\r\n    const { title, file } = fileDescriptor;\r\n    if (title && file) {\r\n      uploadFile(fileDescriptor);\r\n      closeHandler();\r\n      toggleFileError(false);\r\n    } else {\r\n      toggleFileError(true);\r\n    }\r\n  };\r\n\r\n  const updateTagInput = ({ target }) => {\r\n    const tag = target.value.trim();\r\n    if (!tag.startsWith(\"#\")) {\r\n      setNewTag(`#${tag}`);\r\n      return;\r\n    }\r\n    setNewTag(tag);\r\n  };\r\n\r\n  const addNewTagHandler = () => {\r\n    if (newTag === \"\" || newTag === \"#\") return;\r\n    addNewTag(newTag);\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form\">\r\n      <div className=\"upload-form__row upload-form__file\">\r\n        <label className=\"upload-form__label\" htmlFor=\"upload-btn\" tabIndex=\"0\">\r\n          Upload a file:\r\n        </label>\r\n        <input id=\"upload-btn\" onChange={uploadFileHandler} type=\"file\" accept={acceptFileType.images} />\r\n        {showFileError ? <span className=\"upload-form__file-error\">Please select file to upload</span> : null}\r\n      </div>\r\n      <div className=\"upload-form__row upload-form__name\">\r\n        <label className=\"upload-form__label\" htmlFor=\"file-name\">\r\n          File name:\r\n        </label>\r\n        <input id=\"file-name\" value={fileDescriptor.title} type=\"text\" onChange={fileNameChange} />\r\n      </div>\r\n      <div className=\"upload-form__row upload-form__collection\">\r\n        <label htmlFor=\"file-collection\">Collection:</label>\r\n        <select id=\"file-collection\" value={activeCollection} onChange={changeCollection}>\r\n          {collectionOptions}\r\n        </select>\r\n      </div>\r\n      <div className=\"upload-form__row upload-form__tags\">\r\n        <label htmlFor=\"file-tags\">Tags:</label>\r\n        <div className=\"upload-form__new-tag\">\r\n          <input value={newTag} type=\"text\" onChange={updateTagInput}></input>\r\n          <button className=\"button upload__add-btn\" onClick={addNewTagHandler}>\r\n            Add\r\n          </button>\r\n        </div>\r\n        <select className=\"upload-form__tag-list\" id=\"file-tags\" size={3} onChange={changeTags} multiple>\r\n          {tagOptions}\r\n        </select>\r\n      </div>\r\n      <div className=\"upload-form__description\">\r\n        <label htmlFor=\"file-description\">Description:</label>\r\n        <textarea\r\n          id=\"file-description\"\r\n          rows={2}\r\n          onChange={changeDescription}\r\n          value={fileDescriptor.description}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"upload-form__row upload-form__controls\">\r\n        <button className=\"button cancel-btn\" onClick={closeHandler} type=\"button\">\r\n          Cancel\r\n        </button>\r\n        <button className=\"button ok-btn\" onClick={onUpload} type=\"button\">\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import { connect } from \"react-redux\";\r\nimport EditForm from \"ui/ModalWindow/EditForm\";\r\nimport { uploadFile, addNewTag, getTags } from \"thunk\";\r\n\r\nconst mapStateToProps = ({ activeFile, currentColl, collections, tags }) => ({\r\n  activeFile,\r\n  activeCollection: currentColl,\r\n  collections,\r\n  tags,\r\n});\r\n\r\nexport default connect(mapStateToProps, { uploadFile, addNewTag, getTags })(EditForm);\r\n","import React from \"react\";\r\n\r\nconst ErrorDialog = ({ message, onClose, setError }) => {\r\n  const closeHandler = () => {\r\n    onClose();\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p style={{ marginBottom: \"25px\" }}>{message}</p>\r\n      <button className=\"button ok-btn\" onClick={closeHandler} type=\"button\">\r\n        Ok\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorDialog;\r\n","import { connect } from \"react-redux\";\r\nimport ErrorDialog from \"ui/ModalWindow/ErrorDialog\";\r\nimport { setError } from \"actions\";\r\n\r\nconst mapStateToProps = ({ error }) => ({ message: error });\r\n\r\nexport default connect(mapStateToProps, { setError })(ErrorDialog);\r\n","import React from \"react\";\r\n\r\nconst ConfirmDialog = ({ cancelHandler, onDelete, onFullDelete, children, extraQuestion = false }) => {\r\n  return (\r\n    <section className=\"confirm-dialog\">\r\n      {children}\r\n      <div className=\"confirm-dialog__controls\">\r\n        <button className=\"button confirm-dialog__btn cancel-btn\" onClick={cancelHandler} type=\"button\">\r\n          Cancel\r\n        </button>\r\n        <button className=\"button confirm-dialog__btn ok-btn\" onClick={onDelete} type=\"button\">\r\n          Delete\r\n        </button>\r\n        {extraQuestion ? (\r\n          <button className=\"button confirm-dialog__btn ok-btn\" onClick={onFullDelete} type=\"button\">\r\n            Delete with files\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ConfirmDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Main from \"containers/Main\";\r\nimport Panel from \"containers/Panel\";\r\nimport MenuButton from \"ui/MenuButton\";\r\nimport ModalWindow from \"ui/ModalWindow\";\r\nimport EditForm from \"containers/EditForm\";\r\nimport ErrorDialog from \"containers/ErrorDialog\";\r\nimport ConfirmDialog from \"ui/ModalWindow/ConfirmDialog\";\r\nimport { modalWindowTypes, inputModeEnum } from \"constants.js\";\r\n\r\nfunction App({\r\n  showModalType,\r\n  hideModalWindow,\r\n  removeCollection,\r\n  switchCollection,\r\n  removeActiveFile,\r\n  currentColl,\r\n  clearStorage,\r\n}) {\r\n  const [showModal, toggleModal] = useState(false);\r\n\r\n  const closeModalWindow = () => {\r\n    toggleModal(!showModal);\r\n    hideModalWindow();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showModalType) {\r\n      toggleModal(true);\r\n    }\r\n  }, [showModalType]);\r\n\r\n  const deleteCollectionHandler = (deleteWithFiles = false) => () => {\r\n    removeCollection(currentColl, deleteWithFiles);\r\n    closeModalWindow();\r\n  };\r\n\r\n  const deleteFileHandler = () => {\r\n    removeActiveFile();\r\n    switchCollection(currentColl);\r\n    closeModalWindow();\r\n  };\r\n\r\n  const clearStorageHandler = () => {\r\n    clearStorage();\r\n    closeModalWindow();\r\n  };\r\n\r\n  const editFormDialog = (() => {\r\n    if (showModalType === modalWindowTypes.EDIT_FORM_DIALOG) {\r\n      return <EditForm mode={inputModeEnum.EDIT_MODE} closeHandler={closeModalWindow} />;\r\n    } else if (showModalType == modalWindowTypes.CREATE_FORM_DIALOG) {\r\n      return <EditForm mode={inputModeEnum.CREATE_MODE} closeHandler={closeModalWindow} />;\r\n    }\r\n  })();\r\n\r\n  const errorDialog = showModalType === modalWindowTypes.INFO_DIALOG && <ErrorDialog onClose={closeModalWindow} />;\r\n  const deleteFileDialog = showModalType === modalWindowTypes.DELETE_FILE_DIALOG && (\r\n    <ConfirmDialog cancelHandler={closeModalWindow} onDelete={deleteFileHandler}>\r\n      <p>\r\n        Do you really want to delete <strong>current file</strong>?\r\n      </p>\r\n    </ConfirmDialog>\r\n  );\r\n  const clearStorageDialog = showModalType === modalWindowTypes.CLEAR_STORAGE_DIALOG && (\r\n    <ConfirmDialog cancelHandler={closeModalWindow} onDelete={clearStorageHandler}>\r\n      <p>\r\n        Do you really want to delete <strong>all files</strong>?\r\n      </p>\r\n    </ConfirmDialog>\r\n  );\r\n  const deleteCollectionDialog = showModalType === modalWindowTypes.DELETE_COLLECTION_DIALOG && (\r\n    <ConfirmDialog\r\n      cancelHandler={closeModalWindow}\r\n      onDelete={deleteCollectionHandler()}\r\n      onFullDelete={deleteCollectionHandler(true)}\r\n      extraQuestion={true}\r\n    >\r\n      <p>Do you really want to delete collection?</p>\r\n    </ConfirmDialog>\r\n  );\r\n\r\n  return (\r\n    <main className=\"app\">\r\n      <div className=\"container\">\r\n        <div className=\"app__inner\">\r\n          <MenuButton />\r\n          <Panel />\r\n          <Main />\r\n          <ModalWindow isVisible={showModal} onClose={closeModalWindow}>\r\n            {editFormDialog}\r\n            {errorDialog}\r\n            {deleteFileDialog}\r\n            {deleteCollectionDialog}\r\n            {clearStorageDialog}\r\n          </ModalWindow>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport App from \"ui/App\";\r\nimport { hideModalWindow } from \"actions\";\r\nimport { removeCollection, switchCollection, clearStorage, removeActiveFile } from \"thunk\";\r\n\r\nconst mapStateToProps = ({ currentColl, showModalType }) => ({\r\n  currentColl,\r\n  showModalType,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  hideModalWindow,\r\n  removeCollection,\r\n  switchCollection,\r\n  removeActiveFile,\r\n  clearStorage,\r\n})(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport \"lightgallery.js/dist/css/lightgallery.css\";\r\nimport \"styles/styles.scss\";\r\nimport App from \"containers/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}